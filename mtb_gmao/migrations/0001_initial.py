# Generated by Django 4.1.7 on 2023-04-03 11:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField()),
                ('model', models.CharField(max_length=100)),
                ('add_qte', models.IntegerField()),
                ('sub_qte', models.IntegerField()),
                ('serial_number', models.CharField(max_length=100)),
                ('garantie', models.DurationField()),
                ('prev_oper_time', models.IntegerField(help_text='Previous Time of operation in mouth')),
                ('dat_on_oper', models.DateField(auto_now_add=True)),
                ('dat_off_oper', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=30)),
                ('phone', models.IntegerField()),
                ('gps_pos', models.URLField()),
                ('prenom_person', models.CharField(max_length=80)),
                ('fonction_person', models.CharField(max_length=100)),
                ('salaire', models.FloatField()),
                ('residance', models.URLField()),
                ('date_birth', models.DateField()),
                ('type_persons', models.CharField(choices=[('cdd', 'CDD'), ('cdi', 'CDI'), ('partiel', 'INTERIME')], help_text='choose type of contrat', max_length=8)),
            ],
            options={
                'verbose_name_plural': 'persons',
                'ordering': ['type_persons', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=30)),
                ('phone', models.IntegerField()),
                ('gps_pos', models.URLField()),
                ('activite', models.TextField()),
                ('contrat', models.TextField(help_text='decripe the accord with the company')),
                ('imatriculation', models.CharField(max_length=100)),
                ('siège_social', models.CharField(max_length=50)),
                ('type_societe', models.CharField(choices=[('fournisseur', 'Fournisseur'), ('prestataire', 'Prestataire'), ('ONG', 'Donnateur')], help_text='choose if your are personne or company', max_length=13)),
            ],
            options={
                'verbose_name_plural': 'societes',
                'ordering': ['type_societe', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField()),
                ('model', models.CharField(max_length=100)),
                ('add_qte', models.IntegerField()),
                ('sub_qte', models.IntegerField()),
                ('date_out', models.DateField()),
                ('type_consomable', models.CharField(choices=[('Consomable', 'Consomable'), ('piece', 'pièce rechange')], help_text='choose type of stock', max_length=11)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machines', related_query_name='machine', to='mtb_gmao.machine')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtb_gmao.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='nom_societe',
            field=models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='societes', related_query_name='societe', to='mtb_gmao.societe'),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField()),
                ('type_operation', models.CharField(choices=[('maitenance', 'Maintenance'), ('traitement', 'Traitement')], max_length=12)),
                ('state_machine', models.BooleanField(blank=True, default=True)),
                ('task_describe', models.TextField()),
                ('dat_on_oper', models.DateTimeField()),
                ('dat_off_oper', models.DateTimeField()),
                ('dat_next_oper', models.DateTimeField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtb_gmao.machine')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtb_gmao.person')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtb_gmao.stock')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='machine',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtb_gmao.person'),
        ),
    ]
